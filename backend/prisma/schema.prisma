// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum USER_ROLE {
  ADMIN
  EVENT_MANAGER
  USER
}

model User {
  id       String    @id // This will be the Clerk user ID
  email    String    @unique
  name     String?
  imageUrl String?
  role     USER_ROLE @default(USER)

  enrolledEvents Event[]
  comments       Comment[]
  enrollments    Enrollment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id String @id @default(cuid())

  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  maxCapacity Int?
  currentEnrolled Int @default(0)

  user   User   @relation(fields: [userId], references: [id])
  userId String

  comments Comment[]
  enrollments Enrollment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Enrollment {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId String

  enrolledAt DateTime @default(now())

  @@unique([userId, eventId])
}

model Comment {
  id String @id @default(cuid())

  content String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  event   Event  @relation(fields: [eventId], references: [id])
  eventId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
